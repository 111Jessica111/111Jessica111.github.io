<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mobile Android (1)</title>
      <link href="/111Jessica111.github.io/2024/12/07/Mobile/Start%20Guide/"/>
      <url>/111Jessica111.github.io/2024/12/07/Mobile/Start%20Guide/</url>
      
        <content type="html"><![CDATA[<h1>布局</h1><h2 id="LinearLayout">LinearLayout</h2><p>LinearLayout 是 Android 里最基本的布局，它可以用来排列子 View，并且可以设置子 View 的对齐方式、方向、间距等。</p><ul><li>android:orientation：设置 LinearLayout 的方向，可以设置为 horizontal 或 vertical。<ul><li>horizontal：子 View 水平排列。</li><li>vertical：子 View 垂直排列。</li><li>不指定时默认为 'horizontal’排列。</li></ul></li><li>android:gravity：设置 LinearLayout 的对齐方式，可以设置为 center_horizontal、center_vertical、center、top、bottom、left、right。</li><li>android:layout_width：设置 LinearLayout 的宽度。</li><li>android:layout_height：设置 LinearLayout 的高度。</li><li>android:layout_weight：设置 LinearLayout 的权重，可以用来设置子 View 的比例。</li><li>android:layout_margin：设置 LinearLayout 的外边距。</li><li>android:layout_marginStart：设置 LinearLayout 的左外边距。</li><li>android:layout_marginEnd：设置 LinearLayout 的右外边距。</li><li>android:layout_marginTop：设置 LinearLayout 的上外边距。</li><li>android:layout_marginBottom：设置 LinearLayout 的下外边距。</li><li>android:layout_marginLeft：设置 LinearLayout 的左外边距。</li><li>android:layout_marginRight：设置 LinearLayout 的右外边距。</li></ul><h2 id="RelativeLayout">RelativeLayout</h2><p>RelativeLayout 是 Android 里相对布局，它可以用来设置子 View 的相对位置，并且可以设置子 View 的对齐方式、方向、间距等。</p><ul><li>默认左上角为锚点，可以设置子 View 的相对位置。</li><li>android:layout_alignParentLeft：设置 RelativeLayout 的左边距。</li><li>android:layout_alignParentRight：设置 RelativeLayout 的右边距。</li><li>android:layout_alignParentTop：设置 RelativeLayout 的上边距。</li><li>android:layout_alignParentBottom：设置 RelativeLayout 的下边距。</li><li>android:layout_centerInParent：设置 RelativeLayout 的居中。</li><li>android:layout_centerHorizontal：设置 RelativeLayout 的水平居中。</li><li>android:layout_centerVertical：设置 RelativeLayout 的垂直居中。</li><li>android:layout_toLeftOf：设置 RelativeLayout 相对于某个 View 左边距。</li><li>android:layout_toRightOf：设置 RelativeLayout 相对于某个 View 右边距。</li><li>android:layout_above：设置 RelativeLayout 相对于某个 View 上边距。</li><li>android:layout_below：设置 RelativeLayout 相对于某个 View 下边距。</li><li>android:layout_margin：设置 RelativeLayout 的外边距。</li><li>android:layout_marginStart：设置 RelativeLayout 的左外边距。</li><li>android:layout_marginEnd：设置 RelativeLayout 的右外边距。</li><li>android:layout_marginTop：设置 RelativeLayout 的上外边距。</li><li>android:layout_marginBottom：设置 RelativeLayout 的下外边距。</li><li>android:layout_marginLeft：设置 RelativeLayout 的左外边距。</li><li>android:layout_marginRight：设置 RelativeLayout 的右外边距。</li></ul><h2 id="GridLayout">GridLayout</h2><p>GridLayout 是 Android 里网格布局，它可以用来排列子 View，并且可以设置子 View 的对齐方式、方向、间距等。</p><ul><li>android:columnCount：设置 GridLayout 的列数。</li><li>android:rowCount：设置 GridLayout 的行数。</li><li>android:orientation：设置 GridLayout 的方向，可以设置为 horizontal 或 vertical。</li><li>android:layout_column：设置 GridLayout 的列。</li><li>android:layout_columnSpan：设置 GridLayout 的列跨度。</li><li>android:layout_row：设置 GridLayout 的行。</li><li>android:layout_rowSpan：设置 GridLayout 的行跨度。</li><li>android:layout_gravity：设置 GridLayout 的对齐方式。</li><li>android:layout_width：设置 GridLayout 的宽度。</li><li>android:layout_height：设置 GridLayout 的高度。</li><li>android:layout_margin：设置 GridLayout 的外边距。</li><li>android:layout_marginStart：设置 GridLayout 的左外边距。</li><li>android:layout_marginEnd：设置 GridLayout 的右外边距。</li><li>android:layout_marginTop：设置 GridLayout 的上外边距。</li><li>android:layout_marginBottom：设置 GridLayout 的下外边距。</li><li>android:layout_marginLeft：设置 GridLayout 的左外边距。</li><li>android:layout_marginRight：设置 GridLayout 的右外边距。</li></ul><h2 id="ScrollView">ScrollView</h2><p>ScrollView 是 Android 里滚动视图，它可以用来显示内容，并且可以设置滚动方向、滑动速度等。同时为垂直滚动的设置提供了便利。</p><ul><li>布局中Android：layout_width=“wrap_content”、layout_height=“…description…”</li></ul><h2 id="HorizontalScrollView">HorizontalScrollView</h2><p>HorizontalScrollView 是 Android 里水平滚动视图，它可以用来显示内容，并且可以设置滚动方向、滑动速度等。</p><ul><li>布局中Android：layout_height=“wrap_content”、layout_weight=“…description…”</li></ul><h2 id="Button">Button</h2><p>Button 是 Android 里按钮，它可以用来触发事件，并且可以设置按钮的文本、背景、字体颜色、大小、边框等。<br>Button 是 textView 的子类，因此可以设置 textView 的属性。</p><ul><li>主要的区别：<ul><li>Button 有默认的背景颜色，而 textView 无</li><li>Button 的文字默认居中，而 textView 默认左上角为锚点（如果想要textView的文字居中，可以通过Android：gravity=“center”实现）</li><li>Button 的英文会全部转化成为大写，而 textView 保持原本文本的大小写</li></ul></li><li>textAllCaps:决定是否转化大小写</li><li>onClick:指定点击按钮时会触发哪个方法</li><li>常用的指令：<br>setOnClickListener(OnClickListener listener):设置按钮的点击事件监听器<br>setOnLongClickListener(OnLongClickListener listener):设置按钮的长按事件监听器<br>setOnTouchListener(OnTouchListener listener):设置按钮的触摸事件监听器(可编译双击事件)<br>setEnabled(boolean enabled):设置按钮是否可用</li></ul><h2 id="ImageView">ImageView</h2><p>ImageView 是 Android 里图片视图，它可以用来显示图片，并且可以设置图片的缩放模式、大小、边框等。</p><ul><li>图片默认居中，可以通过设置 android:scaleType 属性来改变图片的缩放模式</li></ul><p>常用的指令：</p><table><thead><tr><th>XML中的缩放类型</th><th>scaleType类中的缩放类型</th><th>效果</th></tr></thead><tbody><tr><td>center</td><td>ScaleType.CENTER</td><td>图片会填充整个 View，不留黑边</td></tr><tr><td>centerCrop</td><td>ScaleType.CENTER_CROP</td><td>图片会完整显示，但可能会留黑边</td></tr><tr><td>centerInside</td><td>ScaleType.CENTER_INSIDE</td><td>图片会完整显示，但可能会被裁剪</td></tr><tr><td>fitCenter</td><td>ScaleType.FIT_CENTER</td><td>图片会完整显示，但可能会被拉伸</td></tr><tr><td>fitEnd</td><td>ScaleType.FIT_END</td><td>图片会完整显示，但可能会被裁剪</td></tr><tr><td>fitStart</td><td>ScaleType.FIT_START</td><td>图片会完整显示，但可能会被裁剪</td></tr><tr><td>fitXY</td><td>ScaleType.FIT_XY</td><td>图片会完整显示，但可能会被拉伸</td></tr><tr><td>matrix</td><td>ScaleType.MATRIX</td><td>图片会完整显示，但可能会被拉伸</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Start Guide </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mobile </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
